{"version":3,"sources":["images/search-feature.png","images/create-feature.png","images/select-feature.png","images/battle-feature.png","images/ranking-feature.png","utils/API.js","components/Header/index.js","components/Hero/index.js","components/Features/index.js","pages/Homepage.js","components/Footer/index.js","components/LoginForm/index.js","pages/Login.js","components/SignupForm/index.js","pages/Signup.js","components/ChampionCard/index.js","components/ProfileHeader/index.js","pages/UserProfile.js","pages/ChampionsSearch.js","components/UserCard/index.js","utils/UserContext.js","pages/UsersSearch.js","pages/OtherUserProfile.js","components/HealthBar/index.js","pages/Battle.js","components/RankingRow/index.js","pages/Ranking.js","components/CreateChampionForm/index.js","pages/CreateChampion.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","config","data","axios","post","get","id","champion","put","user","query","delete","queryUrl","process","Promise","resolve","reject","then","res","catch","err","username","Header","useState","setUser","handleLogout","API","console","log","isLoggedIn","useEffect","className","uk-navbar","to","onClick","type","uk-toggle","uk-icon","uk-offcanvas","uk-close","Hero","Features","uk-grid","src","searchFeature","alt","uk-img","createFeature","selectFeature","battleFeature","rankingFeature","Homepage","Footer","href","target","rel","LoginForm","usernameRef","useRef","passwordRef","loginFailed","setLoginFailed","placeholder","ref","e","preventDefault","current","value","password","window","location","replace","setTimeout","Login","SignupForm","confirmPasswordRef","signupFailed","setSignupFailed","missingFields","setMissingFields","passNotMatch","setPassNotMatch","shortPass","setShortPass","confirmPassword","length","Signup","ChampionCard","props","champions","maxReached","setMaxReached","championAdded","setChampionAdded","calcBarWidth","a","nullStats","calcBattleStat","b","c","toFixed","strength","generateStat","Math","floor","random","power","combat","intelligence","speed","durability","attack","defense","name","image","newUserChampion","_id","reload","style","selected","selectedId","border","uk-alert","handleSelect","uk-tooltip","width","ProfileHeader","userChampions","setUserChampions","userChampionId","setUserChampionId","otherChampionId","setOtherChampionId","championId","championSelected","setChampionSelected","newArr","i","push","rank","wins","losses","getUserChampions","champId","chooseOtherChampion","uk-modal","map","key","UserProfile","championList","setChampionList","ChampionsSearch","championsDB","setChampionsDB","searchResults","setSearchResults","noResults","setNoResults","searchRef","toLowerCase","queryRes","results","champRes","heroesResults","newResults","race","appearance","url","powerstats","parseInt","superHeroId","superheroIdRes","dbModel","uk-search-icon","UserCard","UserContext","React","createContext","loggedIn","UsersSearch","users","setUsers","useContext","usersDB","usernameQuery","OtherUserProfile","useParams","otherUser","setOtherUser","userDB","HealthBar","health","Battle","started","timerDone","textDisplay","gameEnded","battleStats","setBattleStats","userid","otheruserid","userData","setUserData","otherData","setOtherData","userAtkTurn","setUserAtkTurn","userChampion","setUserChampion","userHealth","setUserHealth","userAttack","setUserAttack","userDamage","setUserDamage","otherChampion","setOtherChampion","otherHealth","setOtherHealth","otherAttack","setOtherAttack","otherDamage","setOtherDamage","userChamp","otherChamp","userDataRes","otherDataRes","loadChampionsAndUsers","timeLeft","setTimeLeft","playerTurn","userHealthInit","otherHealthInit","newWinsUser","newWinsOther","newTotalBattleUser","newTotalBattleOther","winsPercent","totalBattle","endGame","updateOnOtherWin","updateOnUserWin","startBattleAgain","startBattle","otherDef","damage","userTurn","userDef","otherTurn","display","currentTime","countDown","setInterval","clearInterval","RankingRow","Ranking","rankedUsers","setRankedUsers","rankedUser","CreateChampionForm","createFailed","setCreateFailed","nameRef","imageRef","raceRef","updatedList","CreateChampion","App","getUserData","Provider","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f171ffd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-feature.27916b86.png\";","module.exports = __webpack_public_path__ + \"static/media/create-feature.f8762ccd.png\";","module.exports = __webpack_public_path__ + \"static/media/select-feature.602f516a.png\";","module.exports = __webpack_public_path__ + \"static/media/battle-feature.538625ee.png\";","module.exports = __webpack_public_path__ + \"static/media/ranking-feature.2308d2e7.png\";","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nexport default {\r\n    signupUser: function (data) {\r\n        return axios.post(\"/api/users/signup\", data);\r\n    },\r\n    loginUser: function (data) {\r\n        return axios.post(\"/api/users/login\", data);\r\n    },\r\n    logoutUser: function () {\r\n        return axios.get(\"/api/users/logout\");\r\n    },\r\n    getUserData: function () {\r\n        return axios.get(\"/api/users/user_data\");\r\n    },\r\n    // Add to user's champions\r\n    updateUserChampions: function (id, champion) {\r\n        return axios.put(\"/api/users/\" + id + \"/\" + champion);\r\n    },\r\n    // Update user's champions by removing an id from the array\r\n    removeChampionFromUser: function(user, champion) {\r\n        return axios.put(\"/api/users/champions/\" + user + \"/\" + champion)\r\n    },\r\n    // searchHeroes: function (query) {\r\n    //     return axios.get(\"/api/heroes/\" + query);\r\n    // }\r\n    addChampion: function (data) {\r\n        return axios.post(\"/api/champions\", data);\r\n    },\r\n    getAllChampions: function () {\r\n        return axios.get(\"/api/champions\")\r\n    },\r\n    // getChampionsByQuery: function (query) {\r\n    //     return axios.get(\"/api/champions/query/\" + query)\r\n    // },\r\n    findChampionsByQuery: function(query) {\r\n        return axios.get(\"/api/champions/query/\" + query)\r\n    },\r\n    findAChampionBySuperHeroId: function (id) {\r\n        return axios.get(\"/api/champions/superhero_id/\" + id);\r\n    },\r\n    getChampionById: function(id) {\r\n        return axios.get(\"/api/champions/\" + id)\r\n    },\r\n    getChampionsByUserId: function(id) {\r\n        return axios.get(\"/api/champions/user/\" + id)\r\n    },\r\n    removeChampion: function(id) {\r\n        return axios.delete(\"/api/champions/\" + id);\r\n    },\r\n    // searchHeroes: function (query) {\r\n    //     return axios.get(\"/api/heroes/\" + query);\r\n    // }\r\n    searchHeroes: function (query) {\r\n        const accessToken = process.env.REACT_APP_ACCESS_TOKEN;\r\n\r\n        let queryUrl = `https://cors-anywhere.herokuapp.com/https://superheroapi.com/api/${accessToken}/search/${query}`;\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(queryUrl)\r\n                .then(res => {\r\n                    const heroes = res;\r\n                    resolve(heroes);\r\n                })\r\n                .catch(err => reject(err));\r\n        })\r\n    },\r\n    // Get all users\r\n    getAllUsers: function() {\r\n        return axios.get(\"/api/users\");\r\n    },\r\n    // Get all users for ranking\r\n    getAllUsersForRanking: function() {\r\n        return axios.get(\"/api/users/ranking\");\r\n    },\r\n    // Get a user by the username\r\n    getUserByUsername: function(username) {\r\n        return axios.get(\"/api/users/username/\" + username);\r\n    },\r\n    // Get all users but one\r\n    getAllUsersButOne: function(id) {\r\n        return axios.get(\"/api/users/search/\" + id);\r\n    },\r\n    // Get a user by _id\r\n    getUserById: function(id) {\r\n        return axios.get(\"/api/users/id/\" + id);\r\n    },\r\n    // Update user's wins\r\n    increaseUserWins: function(id) {\r\n        return axios.put(\"/api/users/update/wins/\" + id);\r\n    },\r\n    // Update user's losses\r\n    increaseUserLosses: function(id) {\r\n        return axios.put(\"/api/users/update/losses/\" + id);\r\n    },\r\n    // Update user's totalBattle\r\n    increaseTotalBattle: function(id) {\r\n        return axios.put(\"/api/users/update/total_battle/\" + id);\r\n    },\r\n    // Update user's winsPercent\r\n    updateWinsPercent: function(id, data) {\r\n        return axios.put(\"/api/users/update/wins_percent/\" + id, data);\r\n    },\r\n    // Get users by a search username query\r\n    getUsersBySearch: function(username) {\r\n        return axios.get(\"/api/users/search_by_username/\" + username);\r\n    },\r\n    findAQuery: function(query) {\r\n        return axios.get(\"/api/queries/\" + query);\r\n    },\r\n    addAQuery: function(data) {\r\n        return axios.post(\"/api/queries\", data);\r\n    }\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction Header() {\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        API.getUserData()\r\n            .then(user => {\r\n                setUser({\r\n                    isLoggedIn: true\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setUser({\r\n                    isLoggedIn: false\r\n                });\r\n            })\r\n    }, []);\r\n\r\n    function handleLogout() {\r\n        API.logoutUser()\r\n            .then(() => {\r\n                console.log(\"User logged out.\");\r\n                setUser({\r\n                    isLoggedIn: false\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"uk-navbar-container uk-navbar-transparent uk-light\" uk-navbar=\"true\">\r\n                <div className=\"nav-left uk-navbar-left\">\r\n                    <Link className=\"uk-navbar-item uk-logo\" to=\"/\">ChampUnite</Link>\r\n                    <ul className=\"uk-navbar-nav\">\r\n                        <li><Link to=\"/Ranking\">Ranking</Link></li>\r\n                        <li><Link to=\"/users\">Users</Link></li>\r\n                        <li><Link to=\"/champions\">Champions</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"nav-right-large uk-navbar-right\">\r\n                    {\r\n                        user.isLoggedIn ? (\r\n                            <ul className=\"uk-navbar-nav\">\r\n                                <li>\r\n                                    <Link to=\"/profile\">Profile</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/login\" onClick={handleLogout} >Logout</Link>\r\n                                </li>\r\n                            </ul>\r\n                        ) : (\r\n                                <ul className=\"uk-navbar-nav\">\r\n                                    <li>\r\n                                        <Link to=\"/login\">Login</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            )\r\n                    }\r\n                </div>\r\n                <div className=\"nav-right-small uk-navbar-right uk-margin-top uk-margin-right\">\r\n                    <button className=\"nav-small-icon uk-button uk-button-default\" type=\"button\" uk-toggle=\"target: #nav-small\"><span uk-icon=\"icon: menu\"></span></button>\r\n                    <div id=\"nav-small\" uk-offcanvas=\"flip: true; overlay: true\">\r\n                        <div className=\"nav-bar-small uk-offcanvas-bar uk-flex uk-flex-column\">\r\n                            <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n                            {\r\n                                user.isLoggedIn ? (\r\n                                    <ul className=\"uk-nav uk-nav-primary uk-nav-center\">\r\n                                        <li><Link to=\"/Ranking\">Ranking</Link></li>\r\n                                        <li><Link to=\"/users\">Users</Link></li>\r\n                                        <li><Link to=\"/champions\">Champions</Link></li>\r\n                                        <li><Link to=\"/profile\">Profile</Link></li>\r\n                                        <li><Link to=\"/login\" onClick={handleLogout} >Logout</Link></li>\r\n                                    </ul>\r\n                                ) : (\r\n                                        <ul className=\"uk-nav uk-nav-primary uk-nav-center\">\r\n                                            <li><Link to=\"/Ranking\">Ranking</Link></li>\r\n                                            <li><Link to=\"/users\">Users</Link></li>\r\n                                            <li><Link to=\"/champions\">Champions</Link></li>\r\n                                            <li><Link to=\"/login\">Login</Link></li>\r\n                                        </ul>\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction Hero() {\r\n    return (\r\n        <div className=\"home-hero uk-inline uk-background-fixed uk-background-center uk-height-large uk-flex uk-flex-top uk-width-expand\">\r\n            <div className=\"hero-overlay uk-position-cover\"></div>\r\n            <div className=\"hero-text uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical\">\r\n                <h1>ChampUnite</h1>\r\n                <p>\r\n                    Create your champion(s) now and battle against other users on a one-one-one match.\r\n                </p>\r\n                <Link to=\"/signup\" className=\"uk-button primary-btn\">Sign up</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hero;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport searchFeature from \"../../images/search-feature.png\";\r\nimport createFeature from \"../../images/create-feature.png\";\r\nimport selectFeature from \"../../images/select-feature.png\";\r\nimport battleFeature from \"../../images/battle-feature.png\";\r\nimport rankingFeature from \"../../images/ranking-feature.png\";\r\n\r\nfunction Features() {\r\n    return (\r\n        <section className=\"features-container uk-section uk-flex uk-flex-column uk-flex-middle\">\r\n            <h2>Features</h2>\r\n            <div className=\"uk-margin-top uk-flex uk-flex-column uk-flex-middle\">\r\n                <div className=\"uk-child-width-expand@s uk-text-left@s uk-text-center\" uk-grid=\"true\">\r\n                    <img className=\"feature-img uk-width-1-3@m uk-width-1-2@s\" src={searchFeature} alt=\"Search feature\" uk-img=\"true\" />\r\n                    <div className=\"feature-text uk-flex uk-flex-column\">\r\n                        <h4>Search Champions</h4>\r\n                        <p className=\"uk-margin-remove-top\">Use the search feature to search for your \r\n                        favorite superheroes/champions from a list of over 700.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"uk-child-width-expand@s uk-text-left@s uk-text-center\" uk-grid=\"true\">\r\n                    <img className=\"feature-img uk-width-1-3@m uk-width-1-2@s\" src={createFeature} alt=\"Create feature\" uk-img=\"true\" />\r\n                    <div className=\"feature-text uk-flex uk-flex-column\">\r\n                        <h4>Create a Champion</h4>\r\n                        <p className=\"uk-margin-remove-top\">You have the freedom to create your own champion. \r\n                        Just need a name and image url. The powerstats will be randomly generated so test your \r\n                        luck! The attack and defense will be calculated based on the stats.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"uk-child-width-expand@s uk-text-left@s uk-text-center\" uk-grid=\"true\">\r\n                    <img className=\"feature-img uk-width-1-3@m uk-width-1-2@s\" src={selectFeature} alt=\"Select feature\" uk-img=\"true\" />\r\n                    <div className=\"feature-text uk-flex uk-flex-column\">\r\n                        <h4>Select a Champion for Battle</h4>\r\n                        <p className=\"uk-margin-remove-top\">Select a user to battle from the Users page and \r\n                        then select one of your champions to go into battle.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"uk-child-width-expand@s uk-text-left@s uk-text-center\" uk-grid=\"true\">\r\n                    <img className=\"feature-img uk-width-1-3@m uk-width-1-2@s\" src={battleFeature} alt=\"Battle feature\" uk-img=\"true\" />\r\n                    <div className=\"feature-text uk-flex uk-flex-column\">\r\n                        <h4>Battle Users</h4>\r\n                        <p className=\"uk-margin-remove-top\">Watch as you do a one-on-battle against another user's \r\n                        champion. This is automatic and the champions take turns attacking one another. We take \r\n                        the attacker's Attack value, randomize a value from 1 up to the champion's Defense value \r\n                        in defense mode, and calculate the difference for the health damage.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"uk-child-width-expand@s uk-text-left@s uk-text-center\" uk-grid=\"true\">\r\n                    <img className=\"feature-img uk-width-1-3@m uk-width-1-2@s\" src={rankingFeature} alt=\"Ranking feature\" uk-img=\"true\" />\r\n                    <div className=\"feature-text uk-flex uk-flex-column\">\r\n                        <h4>Make the Ranking</h4>\r\n                        <p className=\"uk-margin-remove-top\">Battle atleast 20 times to get on the ranking with the bests.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Features;","import React from \"react\";\r\nimport Hero from \"../components/Hero\";\r\nimport Features from \"../components/Features\";\r\nimport \"./pages.css\";\r\n\r\nfunction Homepage() {\r\n    return (\r\n        <div className=\"home-container\">\r\n            <Hero />\r\n            <Features />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Homepage;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"uk-height-small uk-flex uk-flex-column uk-flex-center uk-flex-middle uk-width-expand uk-light\">\r\n            <div className=\"social-links uk-flex uk-flex-between\">\r\n                <a href=\"https://github.com/aroblesgalit\" target=\"_blank\" rel=\"noopener noreferrer\"><span uk-icon=\"icon: github\" className=\"uk-icon\"></span></a>\r\n                <a href=\"https://www.linkedin.com/in/aroblesgalit/\" target=\"_blank\" rel=\"noopener noreferrer\"><span uk-icon=\"icon: linkedin\" className=\"uk-icon\"></span></a>\r\n            </div>\r\n            <p className=\"uk-text-small\">© 2020 Alvin Galit</p>\r\n            <a className=\"uk-text-small\" href=\"https://superheroapi.com/index.html\">Superhero API</a>\r\n            <a className=\"uk-text-small\" href=\"https://www.freepik.com/free-photos-vectors/sport\">Battle page background created by starline</a>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction LoginForm() {\r\n\r\n    const usernameRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const [loginFailed, setLoginFailed] = useState(false);\r\n\r\n    function handleAlertClose() {\r\n        setTimeout(() => {\r\n            setLoginFailed(false);\r\n        }, 3000);\r\n    };\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        const username = usernameRef.current.value;\r\n        const password = passwordRef.current.value;\r\n\r\n        API.loginUser({\r\n            username: username,\r\n            password: password\r\n        })\r\n            .then(function (res) {\r\n                window.location.replace(\"/profile\");\r\n                // console.log(\"Login successful! Printing res...\", res);\r\n                console.log(\"You are now logged in.\");\r\n            })\r\n            .catch(function (err) {\r\n                console.log(\"Something went wrong during login...\", err);\r\n                setLoginFailed(true);\r\n            });\r\n\r\n        handleAlertClose();\r\n    }\r\n\r\n    return (\r\n        <form className=\"login-form uk-flex uk-flex-column uk-flex-middle uk-height-1-1\">\r\n            <h2>Login</h2>\r\n            <div className=\"uk-margin-small uk-width-expand\">\r\n                <div className=\"uk-inline uk-width-expand\">\r\n                    <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\r\n                    <input className=\"uk-input\" type=\"text\" placeholder=\"champion201\" ref={usernameRef} />\r\n                </div>\r\n            </div>\r\n            <div className=\"uk-margin-small uk-width-expand\">\r\n                <div className=\"uk-inline uk-width-expand\">\r\n                    <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\r\n                    <input className=\"uk-input\" type=\"password\" placeholder=\"******\" ref={passwordRef} />\r\n                </div>\r\n            </div>\r\n            {loginFailed ? (\r\n                <p className=\"uk-text-small uk-text-danger uk-margin-remove uk-padding-remove uk-text-right\">Login failed.</p>\r\n            ) : \"\"}\r\n            <div className=\"uk-margin-small\">\r\n                <button className=\"uk-button primary-btn\" type=\"submit\" onClick={handleLogin}>Log in</button>\r\n            </div>\r\n            <p className=\"signup-login-text\">\r\n                Don't have an account? <Link to=\"/signup\"><span>Sign up here now.</span></Link>\r\n            </p>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport \"./pages.css\";\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"login-container uk-background-cover uk-flex uk-flex-center\">\r\n            <LoginForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction SignupForm() {\r\n\r\n    const usernameRef = useRef();\r\n    const passwordRef = useRef();\r\n    // const emailRef = useRef();\r\n    const confirmPasswordRef = useRef();\r\n\r\n    const [signupFailed, setSignupFailed] = useState(false);\r\n    const [missingFields, setMissingFields] = useState(false);\r\n    const [passNotMatch, setPassNotMatch] = useState(false);\r\n    const [shortPass, setShortPass] = useState(false);\r\n\r\n    function handleSignup(e) {\r\n        e.preventDefault();\r\n\r\n        const username = usernameRef.current.value;\r\n        // const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n        const confirmPassword = confirmPasswordRef.current.value;\r\n\r\n        if (username && password && confirmPassword) {\r\n            if (password.length >= 6) {\r\n                if (password === confirmPassword) {\r\n                    API.signupUser({\r\n                        username: username,\r\n                        password: password\r\n                        // email: email\r\n                    })\r\n                        .then(function (res) {\r\n                            console.log(\"User is signed up...\", res);\r\n                            window.location.replace(\"/profile\");\r\n                        })\r\n                        .catch(function (err) {\r\n                            console.log(\"Failed signup...\", err);\r\n                            setSignupFailed(true);\r\n                        });\r\n                } else {\r\n                    setPassNotMatch(true);\r\n                }\r\n            } else {\r\n                setShortPass(true);\r\n            }\r\n        } else {\r\n            setMissingFields(true);\r\n        }\r\n        handleAlertClose();\r\n    };\r\n\r\n    function handleAlertClose() {\r\n        setTimeout(() => {\r\n            setSignupFailed(false);\r\n            setMissingFields(false);\r\n            setPassNotMatch(false);\r\n            setShortPass(false);\r\n        }, 3000);\r\n    };\r\n\r\n    return (\r\n        <form className=\"signup-form uk-flex uk-flex-column uk-flex-middle uk-height-1-1\">\r\n            <h2>Signup</h2>\r\n            <div className=\"uk-margin-small uk-width-expand\">\r\n                <div className=\"uk-inline uk-width-expand\">\r\n                    <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\r\n                    <input className=\"uk-input\" type=\"text\" placeholder=\"champion201\" ref={usernameRef} />\r\n                </div>\r\n                {signupFailed ? (\r\n                        <p className=\"uk-text-small uk-text-danger uk-margin-remove uk-padding-remove uk-text-right\">Username is taken.</p>\r\n                ) : \"\"}\r\n            </div>\r\n            {\r\n                // <div className=\"uk-margin-small uk-width-expand\">\r\n                //     <div className=\"uk-inline uk-width-expand\">\r\n                //         <span className=\"uk-form-icon\" uk-icon=\"icon: mail\"></span>\r\n                //         <input className=\"uk-input\" type=\"text\" placeholder=\"champion201@email.com\" ref={emailRef} />\r\n                //     </div>\r\n                // </div>\r\n            }\r\n            <div className=\"uk-margin-small uk-width-expand\">\r\n                <div className=\"uk-inline uk-width-expand\">\r\n                    <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\r\n                    <input className=\"uk-input\" type=\"password\" placeholder=\"password\" ref={passwordRef} />\r\n                </div>\r\n                {shortPass ? (\r\n                    <p className=\"uk-text-small uk-text-danger uk-margin-remove uk-padding-remove uk-text-right\">Password too short.</p>\r\n                ) : \"\"}\r\n            </div>\r\n            <div className=\"uk-margin-small uk-width-expand\">\r\n                <div className=\"uk-inline uk-width-expand\">\r\n                    <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\r\n                    <input className=\"uk-input\" type=\"password\" placeholder=\"confirm password\" ref={confirmPasswordRef} />\r\n                </div>\r\n                {passNotMatch ? (\r\n                    <p className=\"uk-text-small uk-text-danger uk-margin-remove uk-padding-remove uk-text-right\">Password doesn't match.</p>\r\n                ) : \"\"}\r\n            </div>\r\n            {missingFields ? (\r\n                <p className=\"uk-text-small uk-text-danger uk-margin-remove uk-padding-remove uk-text-right\">Empty field(s).</p>\r\n            ) : \"\"}\r\n            <div className=\"uk-margin-small\">\r\n                <button className=\"uk-button primary-btn\" type=\"submit\" onClick={handleSignup}>Sign up</button>\r\n            </div>\r\n            <p className=\"signup-login-text\">\r\n                Already have an account? <Link to=\"/login\"><span>Log in here now.</span></Link>\r\n            </p>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SignupForm;","import React from \"react\";\r\nimport SignupForm from \"../components/SignupForm\";\r\nimport \"./pages.css\";\r\n\r\nfunction Signup() {\r\n    return (\r\n        <div className=\"signup-container uk-background-cover uk-flex uk-flex-center\">\r\n            <SignupForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction ChampionCard(props) {\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        API.getUserData()\r\n            .then(user => {\r\n                setUser({\r\n                    isLoggedIn: true,\r\n                    id: user.data.id,\r\n                    champions: user.data.champions\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setUser({\r\n                    isLoggedIn: false\r\n                })\r\n            })\r\n    }, []);\r\n\r\n    const [maxReached, setMaxReached] = useState(false);\r\n    const [championAdded, setChampionAdded] = useState(false);\r\n\r\n    function calcBarWidth(a) {\r\n        return a * .8;\r\n    }\r\n\r\n    async function handleAdd() {\r\n        try {\r\n            if (user.champions.length < 3) {\r\n                setChampionAdded(true);\r\n                // console.log(\"Running conditional champions.length < 3...\", champions.length);\r\n                if (props.nullStats) {\r\n                    // Function to calculate attack and defense based on powerstats\r\n                    function calcBattleStat(a, b, c) {\r\n                        return ((a + b + c) / 30).toFixed();\r\n                    }\r\n                    // Function to generate a random value from 1 - 100\r\n                    function generateStat() {\r\n                        return Math.floor((Math.random() * 100) + 1);\r\n                    }\r\n                    // Store relevant data\r\n                    const strength = generateStat();\r\n                    const power = generateStat();\r\n                    const combat = generateStat();\r\n                    const intelligence = generateStat();\r\n                    const speed = generateStat();\r\n                    const durability = generateStat();\r\n                    // Calculate attack and defense\r\n                    const attack = calcBattleStat(strength, power, combat);\r\n                    const defense = calcBattleStat(intelligence, speed, durability);\r\n\r\n                    const newUserChampion = await API.addChampion({\r\n                        user: user.id,\r\n                        name: props.name,\r\n                        image: props.image,\r\n                        strength: strength,\r\n                        power: power,\r\n                        combat: combat,\r\n                        intelligence: intelligence,\r\n                        speed: speed,\r\n                        durability: durability,\r\n                        attack: attack,\r\n                        defense: defense,\r\n                        nullStats: props.nullStats\r\n                    })\r\n                    // Update user's champions array\r\n                    await API.updateUserChampions(user.id, newUserChampion.data._id);\r\n                    window.location.reload(false);\r\n                } else {\r\n                    const newUserChampion = await API.addChampion({\r\n                        user: user.id,\r\n                        name: props.name,\r\n                        image: props.image,\r\n                        strength: props.strength,\r\n                        power: props.power,\r\n                        combat: props.combat,\r\n                        intelligence: props.intelligence,\r\n                        speed: props.speed,\r\n                        durability: props.durability,\r\n                        attack: props.attack,\r\n                        defense: props.defense,\r\n                        nullStats: props.nullStats\r\n                    })\r\n                    // Update user's champions array\r\n                    await API.updateUserChampions(user.id, newUserChampion.data._id);\r\n                    window.location.reload(false);\r\n                }\r\n\r\n            } else {\r\n                console.log(\"You've reached the max number of champions on your list! Please make room if you'd like to add another.\");\r\n                setMaxReached(true);\r\n                // After 3 seconds, setMaxReached backto false to close the alert\r\n                setTimeout(function () {\r\n                    setMaxReached(false);\r\n                }, 4000);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Add failed: \", err)\r\n        }\r\n    }\r\n\r\n    function handleDelete() {\r\n        API.removeChampion(props.id)\r\n            .then(res => {\r\n                console.log(res);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n        // Remove from champions list in User model\r\n        API.removeChampionFromUser(user.id, props.id)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"champion-card uk-card uk-position-relatve\" style={props.selected && props.selectedId === props.id ? { border: \"2px solid #221D54\" } : { border: \"\" }} >\r\n            {\r\n                maxReached ? (\r\n                    <div className=\"max-reached-alert uk-alert-danger uk-position-fixed uk-animation-fade uk-animation-slide-bottom uk-animation-fast\" uk-alert=\"true\">\r\n                        <p>You've reached the max of 3 champions! Please make room if you'd like to add another.</p>\r\n                    </div>\r\n                ) : \"\"\r\n            }\r\n            {\r\n                championAdded ? (\r\n                    <div className=\"champion-added-alert uk-alert-success uk-position-fixed uk-animation-fade uk-animation-slide-bottom uk-animation-fast\" uk-alert=\"true\">\r\n                        <p>{props.name} successfuly added to your list!</p>\r\n                    </div>\r\n                ) : \"\"\r\n            }\r\n            {\r\n                props.type === \"search\" && user.isLoggedIn ? (\r\n                    <button className=\"add-btn uk-icon-button uk-position-absolute\" uk-icon=\"plus\" onClick={handleAdd}></button>\r\n                ) : \"\"\r\n            }\r\n            {\r\n                props.type === \"user\" && user.isLoggedIn ? (\r\n                    <button className=\"delete-btn uk-icon-button uk-position-absolute\" uk-icon=\"close\" onClick={handleDelete}></button>\r\n                ) : \"\"\r\n            }\r\n            {\r\n                props.type === \"battle\" && user.isLoggedIn ? (\r\n                    <button className=\"select-btn uk-icon-button uk-position-absolute\" uk-icon=\"check\" onClick={props.handleSelect}></button>\r\n                ) : \"\"\r\n            }\r\n            <div className=\"champion-name-container uk-position-absolute uk-text-center\" style={props.selected && props.selectedId === props.id ? { border: \"1px solid #221D54\" } : { border: \"\" }} >\r\n                <span className=\"champion-name\" >{props.name}</span>\r\n            </div>\r\n            <div className=\"champion-img-container uk-card-media-top uk-margin-top uk-position-relative uk-flex uk-flex-center uk-flex-top\">\r\n                <div className=\"battle-stats-container uk-position-absolute\">\r\n                    <div className=\"battle-stats battle-stats-atk uk-flex uk-flex-column uk-flex-middle uk-margin-small-bottom\">\r\n                        <span className=\"battle-stats-val\">{props.attack}</span><span className=\"battle-stats-label\">ATK</span>\r\n                    </div>\r\n                    <div className=\"battle-stats battle-stats-def uk-flex uk-flex-column uk-flex-middle\">\r\n                        <span className=\"battle-stats-val\">{props.defense}</span><span className=\"battle-stats-label\">DEF</span>\r\n                    </div>\r\n                </div>\r\n                <img src={props.image} alt={props.name} />\r\n            </div>\r\n            <div className=\"uk-card-body\">\r\n                <p className=\"stats-header uk-flex uk-flex-middle\">STATS {props.nullStats ? (<span className=\"null-icon\" uk-icon=\"icon: ban; ratio: .8;\" uk-tooltip=\"title: Stats are randomized on add.; pos: right\"></span>) : \"\"}\r\n                </p>\r\n                <div className=\"stat-row uk-flex uk-flex-middle\">\r\n                    <span className=\"stats-label\">STR</span><div className=\"stats-bar-container uk-flex uk-flex-middle uk-width-expand\"><div className=\"stats-bar\" style={{ width: calcBarWidth(props.strength) + \"%\" }}></div><span className=\"stats-val\">{props.strength}</span></div>\r\n                </div>\r\n                <div className=\"stat-row uk-flex uk-flex-middle\">\r\n                    <span className=\"stats-label\">PWR</span><div className=\"stats-bar-container uk-flex uk-flex-middle uk-width-expand\"><div className=\"stats-bar\" style={{ width: calcBarWidth(props.power) + \"%\" }}></div><span className=\"stats-val\">{props.power}</span></div>\r\n                </div>\r\n                <div className=\"stat-row uk-flex uk-flex-middle\">\r\n                    <span className=\"stats-label\">CBT</span><div className=\"stats-bar-container uk-flex uk-flex-middle uk-width-expand\"><div className=\"stats-bar\" style={{ width: calcBarWidth(props.combat) + \"%\" }}></div><span className=\"stats-val\">{props.combat}</span></div>\r\n                </div>\r\n                <div className=\"stat-row uk-flex uk-flex-middle\">\r\n                    <span className=\"stats-label\">INT</span><div className=\"stats-bar-container uk-flex uk-flex-middle uk-width-expand\"><div className=\"stats-bar\" style={{ width: calcBarWidth(props.intelligence) + \"%\" }}></div><span className=\"stats-val\">{props.intelligence}</span></div>\r\n                </div>\r\n                <div className=\"stat-row uk-flex uk-flex-middle\">\r\n                    <span className=\"stats-label\">SPD</span><div className=\"stats-bar-container uk-flex uk-flex-middle uk-width-expand\"><div className=\"stats-bar\" style={{ width: calcBarWidth(props.speed) + \"%\" }}></div><span className=\"stats-val\">{props.speed}</span></div>\r\n                </div>\r\n                <div className=\"stat-row uk-flex uk-flex-middle\">\r\n                    <span className=\"stats-label\">DUR</span><div className=\"stats-bar-container uk-flex uk-flex-middle uk-width-expand\"><div className=\"stats-bar\" style={{ width: calcBarWidth(props.durability) + \"%\" }}></div><span className=\"stats-val\">{props.durability}</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChampionCard;","import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n// import { Link } from \"react-router-dom\";\r\nimport API from \"../../utils/API\";\r\nimport ChampionCard from \"../ChampionCard\";\r\n\r\nfunction ProfileHeader(props) {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [userChampions, setUserChampions] = useState([]);\r\n    const [userChampionId, setUserChampionId] = useState(\"\");\r\n    const [otherChampionId, setOtherChampionId] = useState(\"\");\r\n\r\n    const [championSelected, setChampionSelected] = useState({\r\n        selected: false,\r\n        championId: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        API.getUserData()\r\n            .then(user => {\r\n                setUser({\r\n                    isLoggedIn: true,\r\n                    champions: user.data.champions\r\n                });\r\n            })\r\n            .catch(err => {\r\n                setUser({\r\n                    isLoggedIn: false\r\n                });\r\n            })\r\n    }, []);\r\n\r\n    function handleModal() {\r\n        getUserChampions();\r\n        chooseOtherChampion();\r\n        // Get other users's champion and select an ID to use for the window.locaiton.replace\r\n    }\r\n\r\n    function handleBattle() {\r\n        if (!userChampionId) {\r\n            window.location.replace(`/battle/${user.champions[0]}/vs/${otherChampionId}`);\r\n        } else {\r\n            window.location.replace(`/battle/${userChampionId}/vs/${otherChampionId}`);\r\n        }\r\n    }\r\n\r\n    function chooseOtherChampion() {\r\n        if (props.champions && props.champions.length > 1) {\r\n            const champId = Math.floor(Math.random() * props.champions.length);\r\n            // console.log(\"chooseOtherChampion ran...\", champId);\r\n            setOtherChampionId(props.champions[champId]);\r\n        } else {\r\n            setOtherChampionId(props.champions[0]);\r\n        }\r\n    }\r\n\r\n    async function getUserChampions() {\r\n        if (user.champions && user.champions.length > 0) {\r\n            const newArr = [];\r\n            for (let i = 0; i < user.champions.length; i++) {\r\n                let res = await API.getChampionById(user.champions[i])\r\n                // res.data is the champion object\r\n                newArr.push(res.data);\r\n            }\r\n            setUserChampions(newArr);\r\n        }\r\n    }\r\n\r\n    function handleSelect(id) {\r\n        setUserChampionId(id)\r\n        // console.log(\"handleSelect ran...printing id of clicked champion...\", id);\r\n        setChampionSelected({\r\n            selected: true,\r\n            championId: id\r\n        });\r\n    }\r\n\r\n    return (\r\n        <section className=\"profile-header uk-section uk-flex uk-flex-middle uk-light\">\r\n            <div className=\"profile-img-container uk-flex uk-flex-center uk-flex-middle uk-margin-right\">\r\n                <img src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\" alt=\"Avatar\" />\r\n            </div>\r\n            <div className=\"uk-flex uk-flex-bottom\">\r\n                <div className=\"uk-flex uk-flex-column uk-margin-large-right\">\r\n                    <h2>{props.username}</h2>\r\n                    <div className=\"uk-flex\">\r\n                        <div className=\"user-stats uk-flex uk-flex-column uk-flex-middle\">\r\n                            <span className=\"stat-val\">{props.rank}</span>\r\n                            <span className=\"stat-label\">Rank</span>\r\n                        </div>\r\n                        <div className=\"user-stats uk-flex uk-flex-column uk-flex-middle\">\r\n                            <span className=\"stat-val\">{props.wins}</span>\r\n                            <span className=\"stat-label\">Wins</span>\r\n                        </div>\r\n                        <div className=\"user-stats uk-flex uk-flex-column uk-flex-middle\">\r\n                            <span className=\"stat-val\">{props.losses}</span>\r\n                            <span className=\"stat-label\">Losses</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    props.type === \"otherUser\" && props.champions && user.champions && user.champions.length > 0 && props.champions.length > 0 ? (\r\n                        // <Link to=\"#\" className=\"uk-button secondary-btn\" onClick={handleBattle}>Battle</Link>\r\n                        <button uk-toggle=\"target: #user-champions-modal\" className=\"uk-button secondary-btn\" onClick={handleModal}>Battle</button>\r\n                    ) : \"\"\r\n                }\r\n            </div>\r\n\r\n            <div id=\"user-champions-modal\" uk-modal=\"true\">\r\n                <div className=\"user-champions-modal-wrapper uk-modal-dialog\">\r\n                    <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n                    <div className=\"uk-modal-header\">\r\n                        <h2 className=\"uk-modal-title\">My Champions</h2>\r\n                        <p>Select one of your champions to go into battle.</p>\r\n                    </div>\r\n                    <div className=\"uk-modal-body uk-flex uk-width-1-1\">\r\n                        {\r\n                            userChampions && userChampions.length > 0 ? (\r\n                                userChampions.map(champion => {\r\n                                    return <ChampionCard\r\n                                        key={champion._id || champion.image}\r\n                                        id={champion._id}\r\n                                        name={champion.name}\r\n                                        image={champion.image}\r\n                                        strength={champion.strength}\r\n                                        power={champion.power}\r\n                                        combat={champion.combat}\r\n                                        intelligence={champion.intelligence}\r\n                                        speed={champion.speed}\r\n                                        durability={champion.durability}\r\n                                        attack={champion.attack}\r\n                                        defense={champion.defense}\r\n                                        type=\"battle\"\r\n                                        handleSelect={() => handleSelect(champion._id)}\r\n                                        selected={championSelected.selected}\r\n                                        selectedId={championSelected.championId}\r\n                                    />\r\n                                }) \r\n                            ) : <p>Search for Champions to add or create your own!</p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"uk-modal-footer uk-text-right\">\r\n                        <button className=\"uk-button secondary-btn uk-modal-close uk-margin-small-right\" type=\"button\">Cancel</button>\r\n                        <button className=\"uk-button secondary-btn\" type=\"button\" onClick={handleBattle}>Battle</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ProfileHeader;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileHeader from \"../components/ProfileHeader\";\r\nimport ChampionCard from \"../components/ChampionCard\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction UserProfile() {\r\n\r\n    const [championList, setChampionList] = useState([]);\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        API.getUserData()\r\n            .then(async(user) => {\r\n                // console.log(user.data);\r\n                const champions = await API.getChampionsByUserId(user.data.id);\r\n                // console.log(champions.data);\r\n                setChampionList(champions.data);\r\n                setUser({\r\n                    username: user.data.username,\r\n                    rank: user.data.rank,\r\n                    wins: user.data.wins,\r\n                    losses: user.data.losses\r\n                });\r\n            })\r\n            .catch(err => {\r\n                window.location.replace(\"/login\");\r\n                console.log(\"Something went wrong. You are now logged out...\", err);\r\n            })\r\n    }, []);\r\n\r\n    // async function loadChampionList () {\r\n    //     console.log(\"loadChampionList() running...\")\r\n    //     if (champions && champions.length > 0) {\r\n    //         console.log(\"loadChampionList() running...if conditional running...\")\r\n    //         const newData = [];\r\n    //         for (let i = 0; i < champions.length; i++) {\r\n    //            const championData = await API.getChampionById(champions[i]);\r\n    //            console.log(championData);\r\n    //            newData.push(championData);\r\n    //         }\r\n    //         setChampionList(newData);\r\n    //     } else {\r\n    //         console.log(\"champions is null\");\r\n    //     }\r\n    // }\r\n\r\n    // Go thru champions array and find each champion by id and create a new array with all data\r\n\r\n    return (\r\n        <div className=\"user-profile-container\">\r\n            <ProfileHeader \r\n                username={user.username} \r\n                rank={user.rank}\r\n                wins={user.wins}\r\n                losses={user.losses}\r\n            />\r\n\r\n            <div className=\"user-champions-container\">\r\n                <div className=\"uk-flex uk-flex-middle uk-flex-between\">\r\n                    <h3>My Champions</h3>\r\n                    <div className=\"uk-flex\">\r\n                        <Link to=\"/champions\" className=\"uk-button secondary-btn uk-margin-small-right\">Search</Link>\r\n                        <Link to=\"/create_champion\" className=\"uk-button secondary-btn\">Create</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"champions-list-container uk-flex uk-flex-wrap\">\r\n                    {\r\n                        championList && championList.length > 0 ? (\r\n                            championList.map(champion => {\r\n                                return <ChampionCard\r\n                                    key={champion._id || champion.image}\r\n                                    id={champion._id}\r\n                                    name={champion.name}\r\n                                    image={champion.image}\r\n                                    strength={champion.strength}\r\n                                    power={champion.power}\r\n                                    combat={champion.combat}\r\n                                    intelligence={champion.intelligence}\r\n                                    speed={champion.speed}\r\n                                    durability={champion.durability}\r\n                                    attack={champion.attack}\r\n                                    defense={champion.defense}\r\n                                    type=\"user\"\r\n                                />\r\n                            }) \r\n                        ) : <p>Search for Champions to add or create your own!</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;","import React, { useRef, useState, useEffect } from \"react\";\r\nimport ChampionCard from \"../components/ChampionCard\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction ChampionsSearch() {\r\n\r\n    // Champions DB\r\n    const [championsDB, setChampionsDB] = useState([]);\r\n    // Champions search results\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [noResults, setNoResults] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadChampionsDB();\r\n    }, []);\r\n\r\n    function loadChampionsDB() {\r\n        API.getAllChampions()\r\n            .then(res => {\r\n                setChampionsDB(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const searchRef = useRef();\r\n\r\n    // Function to generate a random value from 1 - 100\r\n    function generateStat() {\r\n        return Math.floor((Math.random() * 100) + 1);\r\n    }\r\n\r\n    // Handle search event\r\n    async function handleSearch(e) {\r\n        e.preventDefault();\r\n        // Store value of search query - lowercased\r\n        const query = searchRef.current.value.toLowerCase();\r\n\r\n        // Search querydb for query\r\n        const queryRes = await API.findAQuery(query);\r\n        console.log(\"Printing result from findAQuery (queryRes.data)...\", queryRes.data)\r\n        if (queryRes.data && queryRes.data.results) {\r\n            const champRes = await API.findChampionsByQuery(query);\r\n            console.log(\"Pringting results from findChampionsByQuery (champRes.data)...\", champRes.data);\r\n            setSearchResults(champRes.data);\r\n        } else {\r\n            // Otherwise, run the third party api\r\n            console.log(\"No results form database. Running api call now...\");\r\n            const heroesResults = await API.searchHeroes(query);\r\n            console.log(\"Printing results from api call...\", heroesResults.data.results);\r\n\r\n\r\n            if (!heroesResults.data.results) {\r\n                console.log(\"No results for this search.\")\r\n                setNoResults(true);\r\n                // Add query to database\r\n                await API.addAQuery({\r\n                    query: query,\r\n                    results: false\r\n                });\r\n            } else {\r\n                // Add query to database\r\n                await API.addAQuery({\r\n                    query: query,\r\n                    results: true\r\n                });\r\n                // Declare a new array for api search results\r\n                const newResults = [];\r\n                // Declare a function to calculate attack and defense\r\n                function calcBattleStat(a, b, c) {\r\n                    return ((a + b + c) / 30).toFixed();\r\n                }\r\n                // Go through the results\r\n                for (let i = 0; i < heroesResults.data.results.length; i++) {\r\n                    // Store each result\r\n                    const champion = heroesResults.data.results[i];\r\n                    // console.log(\"Adding champions...\", champion);\r\n\r\n                    // Store relevant data\r\n                    const name = champion.name;\r\n                    const race = champion.appearance.race;\r\n                    const image = champion.image.url;\r\n                    let strength;\r\n                    let power;\r\n                    let combat;\r\n                    let intelligence;\r\n                    let speed;\r\n                    let durability;\r\n                    let nullStats;\r\n                    champion.powerstats.strength === \"null\" ? strength = generateStat() : strength = champion.powerstats.strength;\r\n                    champion.powerstats.power === \"null\" ? power = generateStat() : power = champion.powerstats.power;\r\n                    champion.powerstats.combat === \"null\" ? combat = generateStat() : combat = champion.powerstats.combat;\r\n                    champion.powerstats.intelligence === \"null\" ? intelligence = generateStat() : intelligence = champion.powerstats.intelligence;\r\n                    champion.powerstats.speed === \"null\" ? speed = generateStat() : speed = champion.powerstats.speed;\r\n                    champion.powerstats.durability === \"null\" ? durability = generateStat() : durability = champion.powerstats.durability;\r\n                    // Calculate attack and defense\r\n                    const attack = calcBattleStat(parseInt(strength), parseInt(power), parseInt(combat));\r\n                    const defense = calcBattleStat(parseInt(intelligence), parseInt(speed), parseInt(durability));\r\n                    // If any of the powerstats is \"null\"\r\n                    if (champion.powerstats.strength === \"null\" || champion.powerstats.power === \"null\" || champion.powerstats.combat === \"null\" || champion.powerstats.intelligence === \"null\" || champion.powerstats.speed === \"null\" || champion.powerstats.durability === \"null\") {\r\n                        nullStats = true;\r\n                    } else {\r\n                        nullStats = false;\r\n                    }\r\n                    // Push each result into the new result array\r\n                    newResults.push({\r\n                        superHeroId: champion.id,\r\n                        name: name,\r\n                        race: race,\r\n                        image: image,\r\n                        strength: strength,\r\n                        power: power,\r\n                        combat: combat,\r\n                        intelligence: intelligence,\r\n                        speed: speed,\r\n                        durability: durability,\r\n                        attack: attack,\r\n                        defense: defense,\r\n                        nullStats: nullStats\r\n                    })\r\n\r\n                    const superheroIdRes = await API.findAChampionBySuperHeroId(champion.id);\r\n                    console.log(\"Find champion in db by superheroid. Printing result from findAChampionBySuperHeroId...\", superheroIdRes);\r\n                    if (superheroIdRes.data) {\r\n                        console.log(\"Champion found in database. Not adding...\");\r\n                    } else {\r\n                        console.log(\"Champion NOT in database. Adding now...\")\r\n                        // Add each result to the database\r\n                        API.addChampion({\r\n                            superHeroId: champion.id,\r\n                            name: name,\r\n                            race: race,\r\n                            image: image,\r\n                            strength: strength,\r\n                            power: power,\r\n                            combat: combat,\r\n                            intelligence: intelligence,\r\n                            speed: speed,\r\n                            durability: durability,\r\n                            attack: attack,\r\n                            defense: defense,\r\n                            nullStats: nullStats\r\n                        })\r\n                            .then(dbModel => console.log(\"Champion added to db...\", dbModel))\r\n                            .catch(err => console.log(\"Something went wrong while trying to add champion to db...\", err));\r\n                    }\r\n                }\r\n                // Set search results to the new results array\r\n                setSearchResults(newResults);\r\n                console.log(\"New Results: \", newResults);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // // Get champions from db by search query\r\n    // const dbChampions = await API.getChampionsByQuery(query)\r\n    // // If there is results\r\n    // if (dbChampions.data.length) {\r\n    //     // Set search results to the db results\r\n    //     setSearchResults(dbChampions.data);\r\n    //     console.log(\"Grabbing from database...\", dbChampions.data);\r\n    // } else {\r\n    //     console.log(\"No results form database. Running api call now...\")\r\n    //     // Otherwise, run the third party api\r\n    //     const heroesResults = await API.searchHeroes(query);\r\n    //     console.log(\"Printing results...\", heroesResults.data.results);\r\n\r\n    //     if (!heroesResults.data.results) {\r\n    //         setNoResults(true);\r\n    //         console.log(\"No results for this search.\")\r\n    //         return;\r\n    //     }\r\n    //     // Declare a new array for results\r\n    //     const newResults = [];\r\n    //     // Declare a function to calculate attack and defense\r\n    //     function calcBattleStat(a, b, c) {\r\n    //         return ((a + b + c) / 30).toFixed();\r\n    //     }\r\n    //     // Go through the results\r\n    //     for (let i = 0; i < heroesResults.data.results.length; i++) {\r\n    //         // Store each result\r\n    //         const champion = heroesResults.data.results[i];\r\n    //         console.log(\"Adding champions...\");\r\n    //         console.log(champion);\r\n\r\n    //         // Store relevant data\r\n    //         const name = champion.name;\r\n    //         const race = champion.appearance.race;\r\n    //         const image = champion.image.url;\r\n    //         let strength;\r\n    //         let power;\r\n    //         let combat;\r\n    //         let intelligence;\r\n    //         let speed;\r\n    //         let durability;\r\n    //         champion.powerstats.strength === \"null\" ? strength = generateStat() : strength = champion.powerstats.strength;\r\n    //         champion.powerstats.power === \"null\" ? power = generateStat() : power = champion.powerstats.power;\r\n    //         champion.powerstats.combat === \"null\" ? combat = generateStat() : combat = champion.powerstats.combat;\r\n    //         champion.powerstats.intelligence === \"null\" ? intelligence = generateStat() : intelligence = champion.powerstats.intelligence;\r\n    //         champion.powerstats.speed === \"null\" ? speed = generateStat() : speed = champion.powerstats.speed;\r\n    //         champion.powerstats.durability === \"null\" ? durability = generateStat() : durability = champion.powerstats.durability;\r\n    //         // Calculate attack and defense\r\n    //         const attack = calcBattleStat(parseInt(strength), parseInt(power), parseInt(combat));\r\n    //         const defense = calcBattleStat(parseInt(intelligence), parseInt(speed), parseInt(durability));\r\n    //         // Push each result into the new result array\r\n    //         newResults.push({\r\n    //             name: name,\r\n    //             race: race,\r\n    //             image: image,\r\n    //             strength: strength,\r\n    //             power: power,\r\n    //             combat: combat,\r\n    //             intelligence: intelligence,\r\n    //             speed: speed,\r\n    //             durability: durability,\r\n    //             attack: attack,\r\n    //             defense: defense,\r\n    //             query: query\r\n    //         })\r\n    //         // Add each result to the database\r\n    //         API.addChampion({\r\n    //             name: name,\r\n    //             race: race,\r\n    //             image: image,\r\n    //             strength: strength,\r\n    //             power: power,\r\n    //             combat: combat,\r\n    //             intelligence: intelligence,\r\n    //             speed: speed,\r\n    //             durability: durability,\r\n    //             attack: attack,\r\n    //             defense: defense,\r\n    //             query: query\r\n    //         })\r\n    //             .then(dbModel => console.log(dbModel))\r\n    //             .catch(err => console.log(err));\r\n    //     }\r\n    //     // Set search results to the new results array\r\n    //     setSearchResults(newResults);\r\n    //     console.log(\"New Results: \", newResults);\r\n    // }\r\n\r\n    return (\r\n        <section className=\"uk-section champions-search-container\">\r\n            <div className=\"uk-flex uk-flex-middle\">\r\n                <h2>Search Champions</h2>\r\n                <form className=\"uk-search uk-search-default uk-width-1-4@l uk-width-1-3@m uk-width-1-2@s uk-width-1-1\">\r\n                    <button className=\"uk-search-icon-flip\" uk-search-icon=\"true\" onClick={handleSearch}></button>\r\n                    <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search for a champion\" ref={searchRef} />\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"champions-search-results uk-flex uk-flex-wrap\">\r\n                {searchResults.length > 0 ?\r\n                    searchResults.map(champion => {\r\n                        return <ChampionCard\r\n                            key={champion._id || champion.image}\r\n                            name={champion.name}\r\n                            image={champion.image}\r\n                            strength={champion.strength}\r\n                            power={champion.power}\r\n                            combat={champion.combat}\r\n                            intelligence={champion.intelligence}\r\n                            speed={champion.speed}\r\n                            durability={champion.durability}\r\n                            attack={champion.attack}\r\n                            defense={champion.defense}\r\n                            nullStats={champion.nullStats}\r\n                            type=\"search\"\r\n                        />\r\n                    }) : noResults ? <p className=\"uk-text-warning\">No results found. Please try a different search!</p> :\r\n                        championsDB.map(champion => {\r\n                            return <ChampionCard\r\n                                key={champion._id || champion.image}\r\n                                name={champion.name}\r\n                                image={champion.image}\r\n                                strength={champion.strength}\r\n                                power={champion.power}\r\n                                combat={champion.combat}\r\n                                intelligence={champion.intelligence}\r\n                                speed={champion.speed}\r\n                                durability={champion.durability}\r\n                                attack={champion.attack}\r\n                                defense={champion.defense}\r\n                                nullStats={champion.nullStats}\r\n                                type=\"search\"\r\n                            />\r\n                        })\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default ChampionsSearch;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\nimport ChampionCard from \"../ChampionCard\";\r\n\r\nfunction UserCard(props) {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [userChampions, setUserChampions] = useState([]);\r\n    const [userChampionId, setUserChampionId] = useState(\"\");\r\n    const [otherChampionId, setOtherChampionId] = useState(\"\");\r\n\r\n    const [championSelected, setChampionSelected] = useState({\r\n        selected: false,\r\n        championId: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        API.getUserData()\r\n            .then(user => {\r\n                // console.log(user.data);\r\n                setUser({\r\n                    isLoggedIn: true,\r\n                    champions: user.data.champions\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setUser({\r\n                    isLoggedIn: false\r\n                })\r\n            });\r\n    }, []);\r\n\r\n    function handleSelect(id) {\r\n        setUserChampionId(id)\r\n        setChampionSelected({\r\n            selected: true,\r\n            championId: id\r\n        });\r\n        // console.log(\"handleSelect ran...printing id of clicked champion...\", id);\r\n    }\r\n\r\n    function handleBattle() {\r\n        if (!userChampionId) {\r\n            window.location.replace(`/battle/${user.champions[0]}/vs/${otherChampionId}`);\r\n        } else {\r\n            window.location.replace(`/battle/${userChampionId}/vs/${otherChampionId}`);\r\n        }\r\n    }\r\n\r\n    function handleModal() {\r\n        getUserChampions();\r\n        chooseOtherChampion();\r\n        // Get other users's champion and select an ID to use for the window.locaiton.replace\r\n    }\r\n\r\n    async function getUserChampions() {\r\n        if (user.champions && user.champions.length > 0) {\r\n            console.log(\"getUserChampions() is running...this is in the if statement...printing user.champions: \", user.champions);\r\n            const newArr = [];\r\n            for (let i = 0; i < user.champions.length; i++) {\r\n                console.log(\"getUserChampions() is running...this is in the for-loop...printing user.champions[i]: \", user.champions[i]);\r\n                let res = await API.getChampionById(user.champions[i])\r\n                // res.data is the champion object\r\n                newArr.push(res.data);\r\n                console.log(\"newArr: \", newArr)\r\n            }\r\n            setUserChampions(newArr);\r\n        }\r\n    }\r\n\r\n    function chooseOtherChampion() {\r\n        if (props.champions && props.champions.length > 1) {\r\n            const champId = Math.floor(Math.random() * props.champions.length);\r\n            console.log(\"chooseOtherChampion ran...\", champId);\r\n            setOtherChampionId(props.champions[champId]);\r\n        } else {\r\n            setOtherChampionId(props.champions[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-card uk-card\">\r\n            <div className=\"user-info uk-flex\">\r\n                <div className=\"user-image uk-flex uk-flex-center uk-flex-middle uk-margin-small-right\">\r\n                    <img src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\" alt=\"Avatar\" />\r\n                </div>\r\n                <div className=\"uk-flex uk-flex-column\">\r\n                    <h3>{props.username}</h3>\r\n                    <div className=\"uk-flex\">\r\n                        <div className=\"user-info-container uk-flex uk-flex-column uk-flex-middle\">\r\n                            <p className=\"stat-val\">{props.rank}</p>\r\n                            <p className=\"stat-label\">R</p>\r\n                        </div>\r\n                        <hr className=\"uk-divider-vertical uk-margin-small-left uk-margin-small-right\" />\r\n                        <div className=\"user-info-container uk-flex uk-flex-column uk-flex-middle\">\r\n                            <p className=\"stat-val\">{props.wins}</p>\r\n                            <p className=\"stat-label\">W</p>\r\n                        </div>\r\n                        <hr className=\"uk-divider-vertical uk-margin-small-left uk-margin-small-right\" />\r\n                        <div className=\"user-info-container uk-flex uk-flex-column uk-flex-middle\">\r\n                            <p className=\"stat-val\">{props.losses}</p>\r\n                            <p className=\"stat-label\">L</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={user.isLoggedIn ? \"user-card-links uk-flex uk-flex-between\" : \"user-card-links uk-flex uk-flex-center\"} >\r\n                <Link to={`/profile/${props.username}`} className=\"uk-button secondary-btn\">Profile</Link>\r\n                {\r\n                    user.isLoggedIn && props.champions && props.champions.length > 0 && user.champions.length > 0 ? (\r\n                        <button uk-toggle=\"target: #user-champions-modal\" className=\"uk-button secondary-btn\" onClick={handleModal}>Battle</button>\r\n                    ) : \"\"\r\n                }\r\n            </div>\r\n\r\n            <div id=\"user-champions-modal\" uk-modal=\"true\">\r\n                <div className=\"user-champions-modal-wrapper uk-modal-dialog\">\r\n                    <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n                    <div className=\"uk-modal-header\">\r\n                        <h2 className=\"uk-modal-title\">My Champions</h2>\r\n                        <p>Select one of your champions to go into battle.</p>\r\n                    </div>\r\n                    <div className=\"uk-modal-body uk-flex uk-width-1-1\">\r\n                        {\r\n                            user.champions && user.champions.length > 0 ? (\r\n                                userChampions.map(champion => {\r\n                                    return <ChampionCard\r\n                                        key={champion._id || champion.image}\r\n                                        id={champion._id}\r\n                                        name={champion.name}\r\n                                        image={champion.image}\r\n                                        strength={champion.strength}\r\n                                        power={champion.power}\r\n                                        combat={champion.combat}\r\n                                        intelligence={champion.intelligence}\r\n                                        speed={champion.speed}\r\n                                        durability={champion.durability}\r\n                                        attack={champion.attack}\r\n                                        defense={champion.defense}\r\n                                        type=\"battle\"\r\n                                        handleSelect={() => handleSelect(champion._id)}\r\n                                        selected={championSelected.selected}\r\n                                        selectedId={championSelected.championId}\r\n                                    />\r\n                                })\r\n                            ) : <p>Search for Champions to add or create your own!</p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"uk-modal-footer uk-text-right\">\r\n                        <button className=\"uk-button secondary-btn uk-modal-close uk-margin-small-right\" type=\"button\">Cancel</button>\r\n                        <button\r\n                            className=\"uk-button secondary-btn\"\r\n                            type=\"button\"\r\n                            onClick={handleBattle}\r\n                        >\r\n                            Battle\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserCard;","import React from \"react\";\r\n\r\nconst UserContext = React.createContext({\r\n    loggedIn: false,\r\n    id: \"\",\r\n    username: \"\",\r\n    rank: 0,\r\n    wins: 0,\r\n    losses: 0,\r\n    champions: []\r\n});\r\n\r\nexport default UserContext;","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport API from \"../utils/API\";\r\nimport UserContext from \"../utils/UserContext\";\r\n\r\nfunction UsersSearch() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const { id } = useContext(UserContext);\r\n\r\n    const usernameRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            API.getAllUsersButOne(id)\r\n            .then(usersDB => {\r\n                console.log(\"User logged in...from UsersSearch...printing usersDB.data...\", usersDB.data);\r\n                setUsers(usersDB.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n        } else {\r\n            API.getAllUsers()\r\n            .then(usersDB => {\r\n                console.log(\"User not logged in...from UsersSearch...printing usersDB.data...\", usersDB.data);\r\n                setUsers(usersDB.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        \r\n    }, [id]);\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault();\r\n\r\n        const usernameQuery = usernameRef.current.value;\r\n        API.getUsersBySearch(usernameQuery)\r\n            .then(res => {\r\n                setUsers(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Something went wrong during the search...\", err);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"uk-section users-search-container\">\r\n            <div className=\"uk-flex uk-flex-middle\">\r\n                <h2>Search Users</h2>\r\n                <form className=\"uk-search uk-search-default uk-width-1-4@l uk-width-1-3@m uk-width-1-2@s uk-width-1-1\">\r\n                    <button className=\"uk-search-icon-flip\" uk-search-icon=\"true\" type=\"submit\" onClick={handleSearch}></button>\r\n                    <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search for a user\" ref={usernameRef} />\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"users-search-results uk-flex uk-flex-wrap\">\r\n                { \r\n                    users && users.length > 0 ? (\r\n                        users.map(user => {\r\n                            return <UserCard \r\n                                key={user._id}\r\n                                username={user.username}\r\n                                rank={user.rank}\r\n                                wins={user.wins}\r\n                                losses={user.losses}\r\n                                champions={user.champions}\r\n                            />\r\n                        })\r\n                    ) : <p className=\"uk-text-warning\">No users found by that query. Please try a different one.</p>\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default UsersSearch;","import React, { useState, useEffect } from \"react\";\r\nimport ProfileHeader from \"../components/ProfileHeader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ChampionCard from \"../components/ChampionCard\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction OtherUserProfile() {\r\n\r\n    const { username } = useParams();\r\n    // Get user's data based on username from the html route\r\n    const [otherUser, setOtherUser] = useState({});\r\n    const [championList, setChampionList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"useEffect in OtherUserProfile.js running...Printing username...\", username);\r\n        API.getUserByUsername(username)\r\n            .then(async (userDB) => {\r\n                // console.log(userDB.data[0]);\r\n                const champions = await API.getChampionsByUserId(userDB.data[0]._id);\r\n                setChampionList(champions.data);\r\n                setOtherUser({\r\n                    username: userDB.data[0].username,\r\n                    rank: userDB.data[0].rank,\r\n                    wins: userDB.data[0].wins,\r\n                    losses: userDB.data[0].losses,\r\n                    champions: userDB.data[0].champions\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [username]);\r\n\r\n    return (\r\n        <div className=\"user-profile-container\">\r\n            <ProfileHeader\r\n                username={username}\r\n                rank={otherUser.rank}\r\n                wins={otherUser.wins}\r\n                losses={otherUser.losses}\r\n                champions={otherUser.champions}\r\n                type=\"otherUser\"\r\n            />\r\n\r\n            <div className=\"user-champions-container\">\r\n                <div className=\"uk-flex uk-flex-middle uk-flex-between\">\r\n                    <h3>Champions</h3>\r\n                </div>\r\n                <div className=\"champions-list-container uk-flex uk-flex-wrap\">\r\n                    {\r\n                        championList && championList.length > 0 ? (\r\n                            championList.map(champion => {\r\n                                return <ChampionCard\r\n                                    key={champion._id || champion.image}\r\n                                    id={champion._id}\r\n                                    name={champion.name}\r\n                                    image={champion.image}\r\n                                    strength={champion.strength}\r\n                                    power={champion.power}\r\n                                    combat={champion.combat}\r\n                                    intelligence={champion.intelligence}\r\n                                    speed={champion.speed}\r\n                                    durability={champion.durability}\r\n                                    attack={champion.attack}\r\n                                    defense={champion.defense}\r\n                                    type=\"otherUser\"\r\n                                />\r\n                            })\r\n                        ) : <p>This user has no champions yet.</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OtherUserProfile;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction HealthBar(props) {\r\n    return (\r\n        <div className={ props.type === \"user\" ? \"healthbar-wrapper uk-flex uk-flex-middle uk-margin-large-bottom\" : \"healthbar-wrapper uk-flex uk-flex-row-reverse uk-flex-middle uk-margin-large-bottom\" }>\r\n            <div className={ props.type === \"user\" ? \"battle-user-avatar uk-flex uk-flex-center uk-flex-middle\" : \"battle-other-user-avatar uk-flex uk-flex-center uk-flex-middle\" }>\r\n                <img src={props.image} alt=\"Avatar\" />\r\n            </div>\r\n            <div className={ props.type === \"user\" ? \"uk-flex uk-flex-column\" : \"uk-flex uk-flex-column uk-flex-bottom\" }>\r\n                <p className=\"battle-champion-name\">{props.name}</p>\r\n                <div className={ props.type === \"user\" ? \"healthbar-container uk-flex uk-flex-middle\" : \"healthbar-container uk-flex uk-flex-row-reverse uk-flex-middle\" }>\r\n                    <div className={ props.type === \"user\" ? \"healthbar-bar-border uk-flex uk-flex-left\" : \"healthbar-bar-border-reverse uk-flex uk-flex-right\" }>\r\n                        <div className=\"healthbar-bar\" style={{width:`${props.health}%`}}></div>\r\n                    </div>\r\n                    <div className=\"healthbar-val\"><p>{props.health}</p></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HealthBar;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\nimport HealthBar from \"../components/HealthBar\";\r\nimport ChampionCard from \"../components/ChampionCard\";\r\n// import UserContext from \"../utils/UserContext\";\r\n\r\nfunction Battle() {\r\n\r\n    // const [user, setUser] = useContext(UserContext);\r\n\r\n    const [battleStats, setBattleStats] = useState({\r\n        started: false,\r\n        timerDone: false,\r\n        textDisplay: \"\",\r\n        gameEnded: false,\r\n    });\r\n\r\n    // const [playerTurn, setPlayerTurn] = useState();\r\n\r\n    // Get Champion IDs from the url to render their cards and health bar\r\n    const { userid, otheruserid } = useParams();\r\n\r\n    // Get user's and other user's data\r\n    const [userData, setUserData] = useState({});\r\n    const [otherData, setOtherData] = useState({});\r\n\r\n    // console.log(userid, otheruserid);\r\n    const [userAtkTurn, setUserAtkTurn] = useState();\r\n    // User's champion's stats\r\n    const [userChampion, setUserChampion] = useState({});\r\n    const [userHealth, setUserHealth] = useState();\r\n    const [userAttack, setUserAttack] = useState();\r\n    const [userDamage, setUserDamage] = useState();\r\n    // Other's champion's stats\r\n    const [otherChampion, setOtherChampion] = useState({});\r\n    const [otherHealth, setOtherHealth] = useState();\r\n    const [otherAttack, setOtherAttack] = useState();\r\n    const [otherDamage, setOtherDamage] = useState();\r\n    // Battle speed\r\n    // const [battleSpeed, setBattleSpeed] = useState();\r\n    // const [speedToggleClicked, setSpeedToggleClicked] = useState(true);\r\n\r\n    // let speedValue = 1000;\r\n\r\n    useEffect(() => {\r\n        loadChampionsAndUsers();\r\n        // setTimeout(() => {\r\n        //     checkUserStatus();\r\n        // }, 5000);\r\n    }, []);\r\n\r\n    // function checkUserStatus() {\r\n    //     if (user.loggedIn) {\r\n    //         // window.location.replace(\"/login\");\r\n    //         console.log(\"If user is logged in...\", user, user.loggedIn);\r\n    //     } else {\r\n    //         console.log(\"If user is NOT logged in...\", user, user.loggedIn);\r\n    //     }\r\n    // }\r\n\r\n    // function toggleSpeed() {\r\n    //     setSpeedToggleClicked(!speedToggleClicked);\r\n\r\n    //     if (!speedToggleClicked) {\r\n    //         speedValue = 500;\r\n    //         setBattleSpeed(speedValue);\r\n    //         console.log(\"Running toggleSpeed...this is the IF statement ------------------\");\r\n    //         console.log(\"speedToggleClicked value...\", speedToggleClicked);\r\n    //         console.log(\"battleSpeed value...\", battleSpeed);\r\n    //     } else {\r\n    //         speedValue = 1000;\r\n    //         setBattleSpeed(speedValue);\r\n    //         console.log(\"Running toggleSpeed...this is the ELSE statement ------------------\");\r\n    //         console.log(\"speedToggleClicked value...\", speedToggleClicked);\r\n    //         console.log(\"battleSpeed value...\", battleSpeed);\r\n    //     }\r\n    // }\r\n\r\n    async function loadChampionsAndUsers() {\r\n        try {\r\n            const userChamp = await API.getChampionById(userid);\r\n            const otherChamp = await API.getChampionById(otheruserid);\r\n            setUserChampion(userChamp.data);\r\n            setOtherChampion(otherChamp.data);\r\n            setUserAttack(userChamp.data.attack);\r\n            setUserHealth(100);\r\n            setOtherAttack(otherChamp.data.attack);\r\n            setOtherHealth(100);\r\n            // setPlayerTurn(0);\r\n            // console.log(\"useEffect running...from battle...userChamp.data...\", userChamp.data);\r\n            // console.log(\"useEffect running...from battle...otherChamp.data...\", otherChamp.data);\r\n            const userDataRes = await API.getUserById(userChamp.data.user);\r\n            const otherDataRes = await API.getUserById(otherChamp.data.user);\r\n            setUserData(userDataRes.data);\r\n            setOtherData(otherDataRes.data);\r\n            console.log(\"useEffect running...from battle...userDataRes.data...\", userDataRes.data);\r\n            console.log(\"useEffect running...from battle...otherDataRes.data...\", otherDataRes.data);\r\n        } catch (err) {\r\n            console.log(\"Something went wrong...could not loadChampionsAndUsers...\", err);\r\n        }\r\n    }\r\n\r\n    function hideStartBtn() {\r\n        setTimeout(function () {\r\n            setBattleStats({\r\n                ...battleStats,\r\n                started: true\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    const [timeLeft, setTimeLeft] = useState(3);\r\n\r\n    function countDown() {\r\n        let currentTime = 3;\r\n        const countDown = setInterval(function () {\r\n            if (currentTime <= 0) {\r\n                clearInterval(countDown);\r\n                setBattleStats({\r\n                    started: true,\r\n                    timerDone: true,\r\n                    textDisplay: \"FIGHT!\"\r\n                });\r\n            } else {\r\n                currentTime--;\r\n            }\r\n            setTimeLeft(currentTime);\r\n        }, 1000)\r\n        setTimeout(() => {\r\n            startBattle();\r\n        }, 5000)\r\n    }\r\n\r\n    function handleStart() {\r\n        setBattleStats({\r\n            ...battleStats,\r\n            started: true\r\n        });\r\n        countDown();\r\n        hideStartBtn();\r\n    }\r\n\r\n    let playerTurn = 0;\r\n    let userHealthInit = 100;\r\n    let otherHealthInit = 100;\r\n\r\n    function userTurn() {\r\n        console.log(\"------------------------------------------\");\r\n        console.log(\"Player 1 attacks\");\r\n        // get user's attack value\r\n        console.log(\"userAtk: \", userAttack);\r\n        // randomize a number ranging between 1 and other defense\r\n        const otherDef = Math.floor((Math.random() * otherChampion.defense) + 1);\r\n        console.log(\"otherDef: \", otherDef);\r\n        // get the difference\r\n        const damage = userAttack - otherDef;\r\n        console.log(\"damage: \", damage);\r\n        // if difference is positive, subtract from other healthbar\r\n        if (damage >= 0) {\r\n            setOtherDamage(damage);\r\n            setUserAtkTurn(true);\r\n            // setOtherHealth(otherHealth - damage);\r\n            otherHealthInit = otherHealthInit - damage;\r\n            if (otherHealthInit <= 0) {\r\n                setOtherHealth(0);\r\n                console.log(\"otherHealth: \", otherHealthInit);\r\n            } else {\r\n                setOtherHealth(otherHealthInit);\r\n                console.log(\"otherHealth: \", otherHealthInit);\r\n            }\r\n        } else {\r\n            setOtherDamage(0);\r\n            setUserAtkTurn(true);\r\n        }\r\n        // change playerturn\r\n        // setPlayerTurn(1);\r\n    }\r\n\r\n    function otherTurn() {\r\n        console.log(\"------------------------------------------\");\r\n        console.log(\"Player 2 attacks\");\r\n        // get user's attack value\r\n        console.log(\"otherAtk: \", otherAttack);\r\n        // randomize a number ranging between 1 and other defense\r\n        const userDef = Math.floor((Math.random() * userChampion.defense) + 1);\r\n        console.log(\"userDef: \", userDef);\r\n        // get the difference\r\n        const damage = otherAttack - userDef;\r\n        console.log(\"damage: \", damage);\r\n        // if difference is positive, subtract from other healthbar\r\n        if (damage >= 0) {\r\n            setUserDamage(damage);\r\n            setUserAtkTurn(false);\r\n            // setUserHealth(userHealth - damage);\r\n            userHealthInit = userHealthInit - damage;\r\n            if (userHealthInit <= 0) {\r\n                setUserHealth(0);\r\n                console.log(\"userHealth: \", userHealthInit);\r\n            } else {\r\n                setUserHealth(userHealthInit);\r\n                console.log(\"userHealth: \", userHealthInit);\r\n            }\r\n\r\n        } else {\r\n            setUserDamage(0);\r\n            setUserAtkTurn(false);\r\n        }\r\n        // change playerturn\r\n        // setPlayerTurn(0);\r\n    }\r\n\r\n    async function updateOnUserWin() {\r\n        // Increase User's wins and increase Other User's losses\r\n        const newWinsUser = await API.increaseUserWins(userData._id);\r\n        const newWinsOther = await API.increaseUserLosses(otherData._id);\r\n        // Increase both user's totalBattle count\r\n        const newTotalBattleUser = await API.increaseTotalBattle(userData._id);\r\n        const newTotalBattleOther = await API.increaseTotalBattle(otherData._id);\r\n        console.log(\"updateOnUserWin...newWinsUser: \", newWinsUser, \" - newWinsOther: \", newWinsOther, \" - newTotalBattleUser: \", newTotalBattleUser, \" - newTotalBattleOther: \", newTotalBattleOther);\r\n        // Update states\r\n        setUserData(newTotalBattleUser.data);\r\n        setOtherData(newTotalBattleOther.data);\r\n        // Update both user's winsPercent\r\n        await API.updateWinsPercent(userData._id, {\r\n            winsPercent: ((newTotalBattleUser.data.wins / newTotalBattleUser.data.totalBattle) * 100).toFixed()\r\n        });\r\n        await API.updateWinsPercent(otherData._id, {\r\n            winsPercent: ((newTotalBattleOther.data.wins / newTotalBattleOther.data.totalBattle) * 100).toFixed()\r\n        });\r\n    }\r\n\r\n    async function updateOnOtherWin() {\r\n        // Increase User's losses and increase Other User's wins\r\n        const newWinsUser = await API.increaseUserLosses(userData._id);\r\n        const newWinsOther = await API.increaseUserWins(otherData._id);\r\n        // Increase both user's totalBattle count\r\n        const newTotalBattleUser = await API.increaseTotalBattle(userData._id);\r\n        const newTotalBattleOther = await API.increaseTotalBattle(otherData._id);\r\n        console.log(\"updateOnOtherWin...newWinsUser: \", newWinsUser, \" - newWinsOther: \", newWinsOther, \" - newTotalBattleUser: \", newTotalBattleUser, \" - newTotalBattleOther: \", newTotalBattleOther);\r\n        // Update states\r\n        setUserData(newTotalBattleUser.data);\r\n        setOtherData(newTotalBattleOther.data);\r\n        // Update both user's winsPercent\r\n        await API.updateWinsPercent(userData._id, {\r\n            winsPercent: ((newTotalBattleUser.data.wins / newTotalBattleUser.data.totalBattle) * 100).toFixed()\r\n        });\r\n        await API.updateWinsPercent(otherData._id, {\r\n            winsPercent: ((newTotalBattleOther.data.wins / newTotalBattleOther.data.totalBattle) * 100).toFixed()\r\n        });\r\n    }\r\n\r\n    function endGame() {\r\n        if (userHealthInit <= 0) {\r\n            setBattleStats({\r\n                started: true,\r\n                timerDone: true,\r\n                textDisplay: \"You lose.\",\r\n                gameEnded: true\r\n            });\r\n            updateOnOtherWin();\r\n        } else if (otherHealthInit <= 0) {\r\n            setBattleStats({\r\n                started: true,\r\n                timerDone: true,\r\n                textDisplay: \"You win!\",\r\n                gameEnded: true\r\n            })\r\n            updateOnUserWin();\r\n        }\r\n    }\r\n\r\n    function startBattleAgain() {\r\n        setTimeout(() => {\r\n            startBattle();\r\n        }, 500); // Set this value to a state for users to manipulate\r\n    }\r\n\r\n    function startBattle() {\r\n        // if playerTurn is 0, user goes\r\n        if (playerTurn === 0) {\r\n            userTurn();\r\n            playerTurn = 1;\r\n            // Set a timeout to begin startBattle again\r\n            if (otherHealthInit <= 0 || userHealthInit <= 0) {\r\n                endGame();\r\n                console.log(\"You win!\")\r\n            } else {\r\n                startBattleAgain();\r\n            }\r\n            // else playerTurn is 1, other goes\r\n        } else if (playerTurn === 1) {\r\n            otherTurn();\r\n            playerTurn = 0;\r\n            // Set a timeout to begin startBattle again\r\n            if (userHealthInit <= 0 || otherHealthInit <= 0) {\r\n                endGame();\r\n                console.log(\"You lose.\")\r\n            } else {\r\n                startBattleAgain();\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleLeave() {\r\n        window.location.replace(\"/users\");\r\n    }\r\n\r\n    return (\r\n        <section className=\"battle-container uk-flex uk-flex-column uk-flex-middle uk-position-relative\">\r\n            <div className=\"uk-flex uk-flex-top uk-width-expand uk-flex-between\">\r\n                <div className=\"uk-flex uk-flex-column uk-flex-middle uk-position-relative\">\r\n                    {\r\n                        userAtkTurn ? \"\" : <span className=\"health-damage uk-position-absolute\" style={{ display: battleStats.gameEnded ? \"none\" : \"block\" }}>{userDamage}</span>\r\n                    }\r\n                    <HealthBar\r\n                        type=\"user\"\r\n                        image={userChampion.image}\r\n                        name={userChampion.name}\r\n                        health={userHealth}\r\n                    />\r\n                    <ChampionCard\r\n                        type=\"none\"\r\n                        name={userChampion.name}\r\n                        image={userChampion.image}\r\n                        attack={userChampion.attack}\r\n                        defense={userChampion.defense}\r\n                        strength={userChampion.strength}\r\n                        combat={userChampion.combat}\r\n                        power={userChampion.power}\r\n                        intelligence={userChampion.intelligence}\r\n                        durability={userChampion.durability}\r\n                        speed={userChampion.speed}\r\n                    />\r\n                    <span className=\"battle-user-name\"><span uk-icon=\"icon: user; ratio: .8\"></span> {userData.username}</span>\r\n                </div>\r\n                {\r\n                    <div className=\"battle-vs uk-flex uk-flex-column uk-flex-middle uk-margin-large-top\">\r\n                        {\r\n                            battleStats.timerDone ? (\r\n                                \"\"\r\n                            ) : `${timeLeft}`\r\n                        }\r\n                        <div className=\"battle-text uk-position-fixed\">{battleStats.textDisplay}</div>\r\n                    </div>\r\n                }\r\n                <div className=\"uk-flex uk-flex-column uk-flex-middle uk-position-relative\">\r\n                    {\r\n                        userAtkTurn ? <span className=\"health-damage uk-position-absolute\" style={{ display: battleStats.gameEnded ? \"none\" : \"block\" }}>{otherDamage}</span> : \"\"\r\n                    }\r\n                    <HealthBar\r\n                        type=\"otherUser\"\r\n                        image={otherChampion.image}\r\n                        name={otherChampion.name}\r\n                        health={otherHealth}\r\n                    />\r\n                    <ChampionCard\r\n                        type=\"none\"\r\n                        name={otherChampion.name}\r\n                        image={otherChampion.image}\r\n                        attack={otherChampion.attack}\r\n                        defense={otherChampion.defense}\r\n                        strength={otherChampion.strength}\r\n                        combat={otherChampion.combat}\r\n                        power={otherChampion.power}\r\n                        intelligence={otherChampion.intelligence}\r\n                        durability={otherChampion.durability}\r\n                        speed={otherChampion.speed}\r\n                    />\r\n                    <span className=\"battle-user-name\"><span uk-icon=\"icon: user; ratio: .8\"></span> {otherData.username}</span>\r\n                </div>\r\n            </div>\r\n            <button className=\"uk-button primary-btn\" style={{ display: battleStats.started ? \"none\" : \"block\" }} onClick={handleStart}>Start</button>\r\n            <button className=\"uk-button secondary-btn\" style={{ display: battleStats.gameEnded ? \"block\" : \"none\" }} onClick={handleLeave}>Leave</button>\r\n            {\r\n                // <div className=\"battle-speed-toggle-container uk-position-absolute\">\r\n                //     <div className={speedToggleClicked ? \"battle-speed-toggle uk-flex uk-flex-left uk-flex-middle\" : \"battle-speed-toggle uk-flex uk-flex-right uk-flex-middle\"} onClick={toggleSpeed}><div className=\"toggle-ball\"></div></div>\r\n                // </div>\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Battle;","import React, { useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction RankingRow({ id, rank, username, wins, losses, totalBattle, winsPercent }) {\r\n\r\n    useEffect(() => {\r\n        API.updateWinsPercent(id, {\r\n            rank: rank\r\n        })\r\n            .then(res => {\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Something went wrong inside the RankingRow component...\", err);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <tr>\r\n            <td>{rank}</td>\r\n            <td>{username}</td>\r\n            <td>{wins}</td>\r\n            <td>{losses}</td>\r\n            <td>{totalBattle}</td>\r\n            <td>{winsPercent}%</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default RankingRow;","import React, { useState, useEffect } from \"react\";\r\nimport \"./pages.css\";\r\nimport RankingRow from \"../components/RankingRow\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction Ranking() {\r\n\r\n    const [rankedUsers, setRankedUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        API.getAllUsersForRanking()\r\n            .then(res => {\r\n                console.log(\"useEffect from Ranking ran...printing res.data\", res.data);\r\n                setRankedUsers(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"ranking-container uk-section\">\r\n            <h2>Ranking</h2>\r\n            <table className=\"uk-table uk-table-responsive uk-table-hover uk-table-middle uk-table-divider\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"uk-width-small\">Rank</th>\r\n                        <th className=\"uk-width-large\">Username</th>\r\n                        <th>Wins</th>\r\n                        <th>Losses</th>\r\n                        <th># Battles</th>\r\n                        <th>% Wins</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        rankedUsers.length > 0 ? (\r\n                            rankedUsers.map((rankedUser, i) => {\r\n                                return <RankingRow\r\n                                    key={rankedUser._id}\r\n                                    id={rankedUser._id}\r\n                                    rank={i + 1}\r\n                                    username={rankedUser.username}\r\n                                    wins={rankedUser.wins}\r\n                                    losses={rankedUser.losses}\r\n                                    totalBattle={rankedUser.totalBattle}\r\n                                    winsPercent={rankedUser.winsPercent}\r\n                                />\r\n                            })\r\n                        ) : (\r\n                                <tr>\r\n                                    <td className=\"uk-text-nowrap uk-text-muted\">\r\n                                        Battle 20 times to be in the ranking!\r\n                                    </td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Ranking;","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction CreateChampionForm() {\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    const [maxReached, setMaxReached] = useState(false);\r\n    const [championAdded, setChampionAdded] = useState(false);\r\n    const [createFailed, setCreateFailed] = useState(false);\r\n\r\n    useEffect(() => {\r\n        API.getUserData()\r\n            .then(user => {\r\n                setUser({\r\n                    isLoggedIn: true,\r\n                    id: user.data.id,\r\n                    champions: user.data.champions\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Something went wrong when trying to get the user's data...\", err);\r\n                setUser({\r\n                    isLoggedIn: false\r\n                })\r\n            })\r\n    }, []);\r\n\r\n    const nameRef = useRef();\r\n    const imageRef = useRef();\r\n    const raceRef = useRef();\r\n\r\n    // Function to generate a random value from 1 - 100\r\n    function generateStat() {\r\n        return Math.floor((Math.random() * 100) + 1);\r\n    }\r\n\r\n    function calcBattleStat(a, b, c) {\r\n        return ((a + b + c) / 30).toFixed();\r\n    }\r\n\r\n    const strength = generateStat();\r\n    const power = generateStat();\r\n    const combat = generateStat();\r\n    const intelligence = generateStat();\r\n    const speed = generateStat();\r\n    const durability = generateStat();\r\n    const attack = calcBattleStat(strength, power, combat);\r\n    const defense = calcBattleStat(intelligence, speed, durability);\r\n\r\n    async function handleAdd(e) {\r\n        e.preventDefault();\r\n        try {\r\n            if (user.champions.length < 3) {\r\n                if (nameRef.current.value && imageRef.current.value) {\r\n                    const newUserChampion = await API.addChampion({\r\n                        user: user.id,\r\n                        name: nameRef.current.value,\r\n                        image: imageRef.current.value,\r\n                        race: raceRef.current.value,\r\n                        strength: strength,\r\n                        power: power,\r\n                        combat: combat,\r\n                        intelligence: intelligence,\r\n                        speed: speed,\r\n                        durability: durability,\r\n                        attack: attack,\r\n                        defense: defense\r\n                    });\r\n                    console.log(\"handleAdd worked...printing newUserChampion...\", newUserChampion);\r\n                    const updatedList = await API.updateUserChampions(user.id, newUserChampion.data._id);\r\n                    console.log(\"handleAdd worked...printing updatedList...\", updatedList);\r\n                    setChampionAdded(true);\r\n                    window.location.replace(\"/profile\");\r\n                } else {\r\n                    setCreateFailed(true);\r\n                    setTimeout(() => {\r\n                        setCreateFailed(false);\r\n                    }, 4000);\r\n                }\r\n            } else {\r\n                console.log(\"You've reached the max number of champions on your list! Please make room if you'd like to add another.\");\r\n                setMaxReached(true);\r\n                setTimeout(() => {\r\n                    setMaxReached(false);\r\n                }, 4000);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Add failed: \", err);\r\n            setCreateFailed(true);\r\n            setTimeout(() => {\r\n                setCreateFailed(false);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"create-champion-form uk-flex uk-flex-column uk-flex-middle uk-height-1-1\">\r\n            <div className=\"uk-margin-small uk-width-expand\">\r\n                <div className=\"uk-inline uk-width-expand\">\r\n                    <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\r\n                    <input className=\"uk-input\" type=\"text\" placeholder=\"champion_name\" ref={nameRef} />\r\n                </div>\r\n            </div>\r\n            <div className=\"uk-margin-small uk-width-expand\">\r\n                <div className=\"uk-inline uk-width-expand\">\r\n                    <span className=\"uk-form-icon\" uk-icon=\"icon: image\"></span>\r\n                    <input className=\"uk-input\" type=\"text\" placeholder=\"image_url\" ref={imageRef} />\r\n                </div>\r\n            </div>\r\n            <div className=\"uk-margin-small uk-width-expand\">\r\n                <div className=\"uk-inline uk-width-expand\">\r\n                    <span className=\"uk-form-icon\" uk-icon=\"icon: reddit\"></span>\r\n                    <input className=\"uk-input\" type=\"text\" placeholder=\"race\" ref={raceRef} />\r\n                </div>\r\n            </div>\r\n            <div className=\"uk-margin-small\">\r\n                <button className=\"uk-button primary-btn\" type=\"submit\" onClick={handleAdd} >Create</button>\r\n            </div>\r\n            {\r\n                maxReached ? (\r\n                    <div className=\"max-reached-alert uk-alert-danger uk-position-fixed uk-animation-fade uk-animation-slide-bottom uk-animation-fast\" uk-alert=\"true\">\r\n                        <p>You've reached the max of 3 champions! Please make room if you'd like to add another.</p>\r\n                    </div>\r\n                ) : \"\"\r\n            }\r\n            {\r\n                championAdded ? (\r\n                    <div className=\"champion-added-alert uk-alert-success uk-position-fixed uk-animation-fade uk-animation-slide-bottom uk-animation-fast\" uk-alert=\"true\">\r\n                        <p>Champion successfuly added to your list!</p>\r\n                    </div>\r\n                ) : \"\"\r\n            }\r\n            {\r\n                createFailed ? (\r\n                    <div className=\"max-reached-alert uk-alert-danger uk-position-fixed uk-animation-fade uk-animation-slide-bottom uk-animation-fast\" uk-alert=\"true\">\r\n                        <p>Please fill in all the fields.</p>\r\n                    </div>\r\n                ) : \"\"\r\n            }\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CreateChampionForm;","import React from \"react\";\r\nimport CreateChampionForm from \"../components/CreateChampionForm\";\r\n\r\nfunction CreateChampion() {\r\n    return (\r\n        <section className=\"create-container uk-section\">\r\n            <h2>Create a Champion</h2>\r\n            <CreateChampionForm />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CreateChampion;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Homepage from \"./pages/Homepage\";\nimport Footer from \"./components/Footer\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport UserProfile from \"./pages/UserProfile\";\nimport ChampionsSearch from \"./pages/ChampionsSearch\";\nimport UsersSearch from \"./pages/UsersSearch\";\nimport UserContext from './utils/UserContext';\nimport API from \"./utils/API\";\nimport OtherUserProfile from './pages/OtherUserProfile';\nimport Battle from \"./pages/Battle\";\nimport Ranking from \"./pages/Ranking\";\nimport CreateChampion from \"./pages/CreateChampion\";\n\nfunction App() {\n\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  async function getUserData() {\n    console.log(\"getUserData() ran...\")\n    const { data } = await API.getUserData();\n    console.log(\"Running getUserData() from App.js...\", data);\n    if (data) {\n      setUser({\n        loggedIn: true,\n        id: data.id,\n        username: data.username,\n        rank: data.rank,\n        wins: data.wins,\n        losses: data.losses,\n        champions: data.champions\n      });\n    } else {\n      setUser({\n        loggedIn: false,\n        id: \"\",\n        username: \"\",\n        rank: 0,\n        wins: 0,\n        losses: 0,\n        champions: []\n      });\n    }\n  }\n\n  return (\n    <Router>\n      <div>\n        <UserContext.Provider value={user} >\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/profile\">\n              <UserProfile />\n            </Route>\n            <Route path=\"/champions\">\n              <ChampionsSearch />\n            </Route>\n            <Route path=\"/users\">\n              <UsersSearch />\n            </Route>\n            <Route path=\"/profile/:username\">\n              <OtherUserProfile />\n            </Route>\n            <Route path=\"/battle/:userid/vs/:otheruserid\">\n              <Battle />\n            </Route>\n            <Route path=\"/ranking\">\n              <Ranking />\n            </Route>\n            <Route path=\"/create_champion\">\n              <CreateChampion />\n            </Route>\n          </Switch>\n          <Footer />\n        </UserContext.Provider>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}